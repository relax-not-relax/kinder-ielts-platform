/* eslint-disable no-unused-vars */
import React from "react";
import PropTypes from "prop-types";
import student1 from "../../assets/student_1.png";
import student2 from "../../assets/student_2.png";
import { Button, Card } from "@material-tailwind/react";

KinderStudents.propTypes = {};

const STUDENT_RESPONSES = [
  {
    id: 1,
    name: "Nh√¢m Quang ƒê·ª©c",
    image: student1,
    course: "HC71",
    rate: "C√°c anh gi·∫£ng r·∫•t hay v√† ti·∫øp c·∫≠n ƒë√∫ng nƒÉng l·ª±c c·ªßa h·ªçc vi√™n n√™n em c·∫£m th·∫•y b√†i gi·∫£ng tr·ªü n√™n th√∫ v·ªã h∆°n v√† ƒëi·ªÅu ƒë√≥ ƒë√£ gi√∫p em c√≥ s·ª± t·ª± tin cao nh·∫•t khi ƒëi thi v√† ƒë·∫°t ƒë∆∞·ª£c aim m√¨nh mong mu·ªën ·∫°. Em xin c·∫£m ∆°n Kinder v√† ƒë·ªôi ng≈© tutor nhi·ªÅu ·∫° ü´∂üèªü´∂üèªü•∞ü•∞üòç",
    date: "20-Dec-24 IELTS on Computer Academic",
    listening: 7.0,
    reading: 7.0,
    writing: 7.0,
    speaking: 6.5,
    overall: 7.0,
  },
  {
    id: 2,
    name: "Vi·ªát Ph∆∞∆°ng",
    image: student2,
    course: "HC62",
    rate: "Tuy r·∫±ng ch·ªâ 15 bu·ªïi th√¥i nh∆∞ng nh·ªØng ki·∫øn th·ª©c m·ªçi ng∆∞·ªùi truy·ªÅn ƒë·∫°t cho m√¨nh th·∫≠t s·ª± r·∫•t hi·ªáu qu·∫£. Xin c·∫£m ∆°n Kinder v√† 2 b·∫°n gia s∆∞ T√≠n v√† Ph√°t ƒë√£ ƒë·ªìng h√†nh c√πng m√¨nh tr√™n con ƒë∆∞·ªùng chinh ph·ª•c 8.0 IELTS.",
    date: "20-Dec-24 IELTS on Computer Academic",
    listening: 7.0,
    reading: 7.0,
    writing: 7.0,
    speaking: 6.5,
    overall: 7.0,
  },
];

function KinderStudents(props) {
  const [active, setActive] = React.useState(0);
  const [activeButton, setActiveButton] = React.useState(false);

  React.useEffect(() => {
    const interval = setInterval(() => {
      setActive((prev) => (prev + 1) % STUDENT_RESPONSES.length);
    }, 2000);

    return () => clearInterval(interval);
  }, []);

  return (
    <Card className="w-[70%] h-[500px] flex flex-row rounded-2xl">
      <div className="flex-none w-[40%] p-12 flex flex-col justify-between">
        <div className="flex flex-col gap-y-3 text-black">
          <h3 className="text-xl font-bold">Ph·∫£n h·ªìi t·ª´ h·ªçc vi√™n Kinder</h3>
          <div className="flex flex-row gap-x-2 items-center text-lg font-semibold">
            <p>{STUDENT_RESPONSES[active].name}</p>
            <p>-</p>
            <p>H·ªçc vi√™n kho√° {STUDENT_RESPONSES[active].course}</p>
          </div>
          <p>{STUDENT_RESPONSES[active].rate}</p>
        </div>
        <div className="flex flex-col gap-y-4">
          <div className="flex items-center justify-center gap-x-2">
            {STUDENT_RESPONSES.map((_, index) => {
              return (
                <div
                  key={index}
                  className={`w-3 h-3 rounded-full ${
                    active === index ? "bg-custom-green" : "bg-gray-300"
                  } transition-all`}
                ></div>
              );
            })}
          </div>
          <Button
            fullWidth
            className={`rounded-full normal-case xl:text-lg sm:text-base text-sm px-3 py-1 transition-all duration-300 ${
              activeButton
                ? "bg-transparent text-yellow border-2 border-yellow"
                : "bg-yellow text-black border-2 border-yellow"
            }`}
            onMouseEnter={() => setActiveButton(true)}
            onMouseLeave={() => setActiveButton(false)}
            onMouseDown={() => setActiveButton(true)}
            onMouseUp={() => setActiveButton(false)}
            onBlur={() => setActiveButton(false)}
          >
            {activeButton ? "Gi√° tr·ªã c·ªët l√µi" : "T√¨m hi·ªÉu th√™m"}
          </Button>
        </div>
      </div>
      <div className="flex-none w-[32%] h-full">
        <img
          src={STUDENT_RESPONSES[active].image}
          alt={STUDENT_RESPONSES[active].name}
          className="w-full h-full object-cover object-center"
        />
      </div>
      <div className="grow flex flex-col justify-between px-3 py-4">
        <div className="flex flex-col gap-y-5 items-center">
          <p className="text-black font-medium">Overall score</p>
          <p className="text-8xl text-custom-red">
            {STUDENT_RESPONSES[active].overall.toFixed(1)}
          </p>
          <p className="text-sm text-black">{STUDENT_RESPONSES[active].date}</p>
        </div>
        <div className="grid grid-cols-2 grid-rows-2 gap-5">
          <div className="w-full h-32 flex flex-col justify-center items-center gap-y-2 shadow-md rounded-lg">
            <p className="text-black text-lg">Listening</p>
            <p className="text-custom-red text-3xl font-semibold">
              {STUDENT_RESPONSES[active].listening.toFixed(1)}
            </p>
          </div>
          <div className="w-full h-32 flex flex-col justify-center items-center gap-y-2 shadow-md rounded-lg">
            <p className="text-black text-lg">Reading</p>
            <p className="text-custom-red text-3xl font-semibold">
              {STUDENT_RESPONSES[active].reading.toFixed(1)}
            </p>
          </div>
          <div className="w-full h-32 flex flex-col justify-center items-center gap-y-2 shadow-md rounded-lg">
            <p className="text-black text-lg">Writing</p>
            <p className="text-custom-red text-3xl font-semibold">
              {STUDENT_RESPONSES[active].writing.toFixed(1)}
            </p>
          </div>
          <div className="w-full h-32 flex flex-col justify-center items-center gap-y-2 shadow-md rounded-lg">
            <p className="text-black text-lg">Speaking</p>
            <p className="text-custom-red text-3xl font-semibold">
              {STUDENT_RESPONSES[active].speaking.toFixed(1)}
            </p>
          </div>
        </div>
      </div>
    </Card>
  );
}

export default KinderStudents;
